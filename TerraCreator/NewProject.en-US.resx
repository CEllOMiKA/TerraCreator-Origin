<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="newprojlabel.Location" type="System.Drawing.Point, System.Drawing">
    <value>8, 6</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="newprojlabel.Margin" type="System.Windows.Forms.Padding, System.Windows.Forms">
    <value>2, 0, 2, 0</value>
  </data>
  <data name="newprojlabel.Size" type="System.Drawing.Size, System.Drawing">
    <value>130, 22</value>
  </data>
  <data name="newprojlabel.Text" xml:space="preserve">
    <value>Import Project
</value>
  </data>
  <data name="tmlyouneed.Location" type="System.Drawing.Point, System.Drawing">
    <value>8, 38</value>
  </data>
  <data name="tmlyouneed.Margin" type="System.Windows.Forms.Padding, System.Windows.Forms">
    <value>2, 0, 2, 0</value>
  </data>
  <data name="tmlyouneed.Size" type="System.Drawing.Size, System.Drawing">
    <value>472, 51</value>
  </data>
  <data name="tmlyouneed.Text" xml:space="preserve">
    <value>You need to create the project in tModLoader
Then select the project folder below
(Note: Some software will prevent TerraCreator from accessing the User folder)</value>
  </data>
  <data name="clickto.Location" type="System.Drawing.Point, System.Drawing">
    <value>8, 89</value>
  </data>
  <data name="clickto.Margin" type="System.Windows.Forms.Padding, System.Windows.Forms">
    <value>2, 0, 2, 0</value>
  </data>
  <data name="clickto.Size" type="System.Drawing.Size, System.Drawing">
    <value>96, 17</value>
  </data>
  <data name="clickto.Text" xml:space="preserve">
    <value>Tutorial(zh-CN)</value>
  </data>
  <data name="choosefolder.Location" type="System.Drawing.Point, System.Drawing">
    <value>8, 115</value>
  </data>
  <data name="choosefolder.Margin" type="System.Windows.Forms.Padding, System.Windows.Forms">
    <value>2, 2, 2, 2</value>
  </data>
  <data name="choosefolder.Size" type="System.Drawing.Size, System.Drawing">
    <value>70, 23</value>
  </data>
  <data name="choosefolder.Text" xml:space="preserve">
    <value>Choose</value>
  </data>
  <data name="folderpositiontext.Location" type="System.Drawing.Point, System.Drawing">
    <value>8, 141</value>
  </data>
  <data name="folderpositiontext.Margin" type="System.Windows.Forms.Padding, System.Windows.Forms">
    <value>2, 0, 2, 0</value>
  </data>
  <data name="folderpositiontext.Size" type="System.Drawing.Size, System.Drawing">
    <value>178, 17</value>
  </data>
  <data name="folderpositiontext.Text" xml:space="preserve">
    <value>The folder path you selected:</value>
  </data>
  <data name="create.Location" type="System.Drawing.Point, System.Drawing">
    <value>8, 181</value>
  </data>
  <data name="create.Margin" type="System.Windows.Forms.Padding, System.Windows.Forms">
    <value>2, 2, 2, 2</value>
  </data>
  <data name="create.Size" type="System.Drawing.Size, System.Drawing">
    <value>70, 24</value>
  </data>
  <data name="create.Text" xml:space="preserve">
    <value>Start!</value>
  </data>
  <data name="typenamespace.Location" type="System.Drawing.Point, System.Drawing">
    <value>8, 162</value>
  </data>
  <data name="typenamespace.Margin" type="System.Windows.Forms.Padding, System.Windows.Forms">
    <value>2, 0, 2, 0</value>
  </data>
  <data name="typenamespace.Size" type="System.Drawing.Size, System.Drawing">
    <value>164, 17</value>
  </data>
  <data name="typenamespace.Text" xml:space="preserve">
    <value>Enter the mod namespace:</value>
  </data>
  <data name="ProjectNameSpaceTextBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>164, 160</value>
  </data>
  <data name="ProjectNameSpaceTextBox.Margin" type="System.Windows.Forms.Padding, System.Windows.Forms">
    <value>2, 2, 2, 2</value>
  </data>
  <data name="ProjectNameSpaceTextBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>222, 23</value>
  </data>
  <data name="$this.AutoScaleDimensions" type="System.Drawing.SizeF, System.Drawing">
    <value>7, 17</value>
  </data>
  <data name="$this.ClientSize" type="System.Drawing.Size, System.Drawing">
    <value>482, 215</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMIOAADCDgAAAAAAAAAA
        AAAAAAAAAAAAAFxcXABhYmIAa21sAA8ACQBmZWcAX1xfAGFeYwBYVlgAc3eEAFtbXwBST1AASkJCBVxX
        V05lYmLCZWJiwltYWE1GRUUFUU9QAFtaWgBrb3AAWFVXAF9cYQBdWl4AYV9hAISOiQBgYWEAXFxcAFhY
        WAAAAAAAAAAAAAAAAAAAAAAAXl5eAGFiYgBqb24AUExOAHl+hgFbWV4GNTQgAFNSUwBLR0MAV1heBkpI
        SxFKRkctaGVkkYyMieuMjInqaGVkkEpFRy1KSEkSVlZXB01HRgBTUVIALSsNAFlXXAdjZGoCTkpLAF5h
        YQBbW1wAWVpaAAAAAAAAAAAAAAAAAAAAAABlaGgAaW5uAMb+/ABbWloJXVpaLmBdXk5WU1QlSUhIEFJR
        USNeXF1RX11dgWFfXq98fHrlpamk/qWppP59fHrlYV5esV9dXIVeXVxUU1FRJUlHSBFXU1QmYF1eU1xa
        WjVZWFgLdpObAF5iYwBdX2AAAAAAAAAAAAAAAAAAAAAAAFRRUQBRTk4ARkNDBV1aWTtraGetcnBv2GVi
        YaVbWll+Y2JhrHJycNyBgH/uiYuI+JibmP6kqKT/pKik/5iamP+Ki4n4gYF/73Rzcd5kYmGwXFlagmVj
        YqZzcnDabGpotVxaWUBFQkIFUE1NAFNQTwAAAAAAAAAAAAAAAAAzMzMASEFBAEM7OwAwJigMYl5daI2N
        iuWZnJf/h4iF9nt6eO2Jiof4l5qW/5yemf+Zm5T/lJWM/5GRhv+RkYb/lJSL/5makv+bnpn/l5qW/4uM
        ifl8e3ruh4iF9pqdmP+Oj4vnZGBdajIpKA1EPTsASUNBACoqKgAAAAAAAAAAAAIPDwA6Ly8AMCMkAAQA
        AAdkX11TlJWQ36aqpf+kqaT/naGd/5ialf+OjoP/h4V0/4iFbP+Lh2j/jIhn/4yIZ/+Lh2n/iIVt/4iG
        dP+OjoP/l5qU/52hnf+kqaT/pqql/5OUkOBjX1xTAAAABywjIwA2Li0AGhwcAAAAAAB2dXUAYGJiAEtG
        RwA2LS0ABAAABlhUU1OGhoLdpamk/6GloP+PkIf/iodx/42JaP97eGD/a2xg/2tvZ/9udW//bXl1/2x4
        df9pc3D/gIBn/4+Laf+Jh3D/jo+G/6Ckn/+kqKT/hoaC4FhVU1kSCgwIPjY2AFlTVABgY2MAaXl5AH+A
        gABgYmIATk9PAP///wBOSUkramdmqpGSj/Wcn5v/iop9/4qHaf+bl2z/oJ1v/4SBZf9YXGH/R1Zz/0hm
        j/9IcKD/SWyU/11uev+JiWz/op5w/5uYbf+LiGn/iYh7/5uemf+SlJH3bGposk5KSTIAAAABS0xMAGJl
        ZQBuhIQA////AF1iYwRNWVwEQDs9GWJfXYCMjInpnJ+a/4qJfP+NiWn/nppu/6Kfcv+joHP/n5xw/4OC
        Z/9XX2n/RF+K/0Vtof9gdID/j45u/6Kecf+koXT/o6Bz/56bb/+Pimn/iYh5/5uemv+Oj4ztZGFfi0I9
        Ph1NV1kEYGdnBLn//wBfXV0WX11dQlpaWlBYVVVweXh21Zyfm/6Pj4T/jIhp/56bb/+joHP/oZ5y/6Ge
        cv+koXP/oZ1w/3t7Zf9LXXn/RmeR/3B4cf+dmGz/mpZr/5mVa/+hnnL/o6Bz/5+bb/+NiWn/jY2C/52f
        m/98e3nbWVVWdVpZWVFgX19DW11dGl9dXGJvbWzGcG5t43V0cuiSlJH7lZiS/4iFbf+bl23/o6Bz/6Ge
        cv+hnnL/op9z/6SgdP+loXL/iYZn/1Bfdv9FZ5X/VWd6/29yYv9scFD/dXlW/5aUa/+in3P/o6Bz/5yZ
        bf+Jhmz/lJaP/5SWk/x2dXPpcG5t43BubchgXFxtb21rqpiZlfGcnpr/naCb/56inv+KiXz/ko9q/6Ge
        cf+in3L/oZ5y/6Kecv+gnHH/op5x/6Ofcf+CgWf/TV53/0hplP9baXX/V2Ja/1SAYf9ai2j/f4hk/6Cc
        cP+joHP/oZ5x/5SQav+Jh3n/nqGd/52gnP+cn5r/mJqW9HJvbbhycGytoaOe56itqP+lqqb/mJqV/4iG
        bv+dmW7/op9y/6Gecv+in3P/nJlv/4OCXf+Eglz/iolp/2NqbP9GW37/TWqQ/3V5bP9qe1r/VqN+/1il
        g/9+jmv/oZxw/6Ofc/+in3P/nppv/4mGbf+WmJL/paml/6itqP+go57odHJvtFpVU0F9fHiVl5mU5qOn
        o/6Rkon/jYpq/6CdcP+in3P/op9z/6Kecv+LimT/YnNR/1x3V/9baGT/UWB0/0Zdgf9Nao7/e4Bu/36K
        Y/9pk3H/c5Jw/5KWbv+innL/op5y/6Kfc/+gnnH/j4tq/4+Qhv+jpqL+lpmU53x7eJVaVVRBAAAAA1tW
        VCt9fHmjoKOf9Y6Ogv+Sj2r/oZ5x/6Kfc/+in3P/op1x/4iKZf9bkG3/U6B+/2B7Z/9ub2T/TF15/0po
        jv9+hHP/nZpu/5iWbf+cmG7/oZ1x/6Gecv+hnnL/op9y/6Gecf+UkGr/jY1//6Cjn/Z/fnuqXVhWLQAA
        AAJaVFMAVU9NFXx6eJCho5/xjYx+/5WSa/+hnnH/oZ5y/6Kfcv+jnXH/kZRs/2aXdf9bpIH/c49s/3h3
        ZP9LXHr/SmiO/3+Fc/+jnnD/pJ9y/6Kecv+innL/oZ5y/6Gecv+hnnL/oZ5x/5eUbP+NjHv/oKOf9H9+
        e5xfW1gYYFtZAGViXwBdV1QWf316lKGjn/KNjHz/lpJr/6Gecf+hnnL/oZ5y/6Kecv+fnHH/j5Rt/4aT
        bf+Slm3/eXlo/0haev9JZ4//f4V0/6Sgcv+koXP/oZ5y/6Gecv+hnnL/oZ5y/6Gecv+hnnH/mJVs/42L
        e/+go5/1goF/oGZjXxlramcApxQAAFFNTCd4dnOkn6Gd9Y2Mf/+VkWv/oZ1x/6Gecv+hnnL/oZ5y/6Kf
        cv+jnnL/oZtw/5WQZ/9ycFf/SFZl/0hhgf96fmz/nphs/6Kecf+innL/oZ5y/6Gecv+hnnL/oZ5y/6Ge
        cf+Wk2v/jIt8/56hnvd7enesVlNSKYRTOQBZWVotX1xcgnp6eN+doJz9jY2D/5CMav+hnnH/op9z/6Ge
        cv+hnnL/op9z/5yZbv+DgFz/aW5N/11uTP9Tblb/UGZb/2JrUv9zdVP/h4Vf/52ab/+in3P/oZ5y/6Ge
        cv+in3P/oZ5x/5GOav+MjID/naGd/nx8eeBfXFyCWlpbLWJgX5iCgX/fmZyY/qOno/+Qkoz/h4Rq/5+c
        cP+joHP/oZ5y/6Kfc/+fnHD/gH9b/15tS/9Zh2L/W6N8/1yshP9boHj/WpRu/1iIZP9hgF7/iIxm/6Gd
        cv+in3P/oZ5y/6Ogc/+gnXD/iIVp/46Qif+jp6P/mpyY/oGAfuBjYWCec3BtvKCjnvWpraf/pqqm/5qd
        mf+Af2//lpNs/6Kfcv+hnnL/o59z/5qVbP9td1X/WJFs/1u3j/9cwZn/XMKZ/13Al/9cv5b/WbuT/1io
        hP93jmv/n5pv/6Ofcv+hnnL/op9y/5iUbf+Afm7/mJuW/6aqpf+praf/oaOf93RycMluamZ+l5iUz5ye
        meedoJvtoKOf/YeHgf+EgWf/nptw/6Ogc/+jn3P/l5Nq/2iBYf9Yr4n/W8Ka/1zBmf9cwJj/XMCY/1zB
        mf9awpr/WbOO/3aRbv+emm//o59y/6Ogc/+fnHD/hoJn/4WFfv+go5/9naCb7pyemeeZmpbSb21qjFBH
        RSRmYl5TaGRgY3JvbIaSlJDimZyZ/3x7cP+MiWn/op9y/6Sgcv+Zlm3/a49v/1i1kP9bwZj/XL+X/1y/
        l/9cv5f/XL+X/1rBmP9Yso3/cJBu/5yYbv+koHP/op9y/46Laf97eW7/mJqX/5aYlOV0cm6LZ2NgZGdi
        YFROSkgpAAAAAhYMCQgOAAAJTUZFJHt6d5igo5/ykJKO/3d1aP+Oi2n/op9y/6Gccf+AkG3/XKaD/1rA
        mP9cwpn/XMCY/1zAmP9cwpr/Wb2W/1+gfv+Dj2v/oZxw/6Ofcv+QjWr/d3Vn/42Pi/+go5/1fn56olNO
        TCgLAAAJFwgKCAAAAAIkFhQANy8sADgxLwAAAAACXVpYPImJhb2go5/5iIqG/3RyZv+Jh2j/nppv/5KT
        bP9knHn/WbuU/1vAmP9bv5j/W8CY/1m9lv9dqYb/fpJu/5+bb/+fm3D/iohp/3VyZv+Gh4T/oKOf+4uN
        h8VeW1hFAAAABDkxMAA3LS0AHhgZAC8iIQA7NDEAq5+aAH13cgAXEhAKZGJfXJCRjd2ipaH/iouI/3Nx
        av98eWT/i4ho/3mNa/9omXf/YaB9/1uphf9dpoL/Y5t5/3WQbv+Ukmz/k49s/316Zf9ycWj/iImG/6Gk
        oP+SlI/gaGZhZCYfHA2en5YA////ADsxMQApJCQAAAAAAAAAAAASDw0ABwIAAAAAAAJZVlRAiImF1qaq
        pP+nq6b/lZeU/319ef9ycGj/dXJi/3h3Yv91e2P/bH1l/3F9ZP97fGP/fntj/3l2ZP9ycGf/fHt4/5SW
        kv+mqqX/paql/4iIhddaV1VBAAAAAg4HBwAYEhEAAAAAAAAAAAAAAAAAAAAAAEQ9OwA8NTMAIhgWC2Zj
        YGKXmZTkp6um/6Woo/qhpKDyn6Ke+5OVkv+FhIH/e3dz/3Rwa/9xbWf/cm5o/3Vxa/95eHT/goOA/5GT
        kP+eoZ38oqWg86Woo/qnq6b/l5iU5mdjYWMjGRsLPjY2AEU+PgAPBwcAAAAAAAAAAAAAAAAAQDk4ADoy
        MgAiGBkIXVhXTYmJhr6bnZjhhoWCuHVycJSIiYS9m52Z46KlofOfop77mZyY/5aYlP+VmJT/mZyY/56i
        nvyipaHznJ6Z5YmJhsF1c3GYhYWBuZyemeSLi4fFYFpZUikdHwk/NTYARTw8AAAAAAAAAAAAAAAAAAAA
        AAA7NDUANzAwACEaGgFFPj8QXVdXP2xoZmJhXVsySENDGGBdWi9wbWlif356lIqKh7+YmpbvqKyo/6is
        p/+YmpbvioqHwYB/fJdwbmpmXltZM0lEQxlhX1wzbWpoZ19bWEZLREMSKx0gAT40NQBCOTkAAAAAAAAA
        AAAAAAAAAAAAAD02NgAxKCkAFAgMALzFuAAAAAAELCEhCwAAAAFzbGoA////AC8kIwtaVVQVa2dmNn9+
        e6mnqqX0p6ql8359e6hpZmU3XVdWFjIqKAwAAAABe3RyAAAAAAIzKikMAAAABfn//AAjFhcAOS8vAEM6
        OgAAAAAAAAAAAAAAAAAAAAAAPTY2ACkfIQAOAAYAAAAAACEUGABEPDsAKyYlALmsqQAFAAAARz89AF1Y
        VwAuIiQLZmFfaomJhduJiYXaZWBeaSkdHwtgWlkASEJAAAYCAQDm2dQAMCsqAEhBQAAsISEAAAAAACAU
        FQAyKCgAQzo6AAAAAAAAAAAAwAAAA8AAAAPAAAADwAAAA4AAAAGAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACAAAABgAAAAcAAAAPAAAADwAAAA8AAAAM=
</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Import Projcet</value>
  </data>
</root>